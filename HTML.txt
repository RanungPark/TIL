▶▶▶1장
HTML은 마크업 언어이다 (HyperText Markup Language)
마크업 언어 : 태그 등을 이용하여 문서나 데이터의 구조를 분명히 기록하는 언어의 한가지
하이퍼 텍스트 : 참조(하이퍼 링크)를 통해 독자가 한 문서에서 다른 문서로 즉시 접근할 수 있는 텍스트
HTML 은 내용과 구조를 담당하는 언어이다
HTML의 버전은 HTML5이고 2014년 10월 28일 에 확정된 차세대 웹 표준이다

멀티미디어
-플래시와 같은 플러그인의 도움없이 비디오 및 오디오 기능을 자체적으로 지원한다.
그래픽
-SVG, 캔버스를 사용한 2차원 그랙픽과 CSS3, WebGL을 사용한 3차 그래픽을 지원한다.
통식
-지금까지의 HTML은 단방향 통신만이 가능하였으나 HTML5는 서버와의 소켓 통신을 지원하므로 서버와의 양방향 통신이 가능하다.
디바이스 접근
-카메라, 동작센서 등의 하드웨어 기능을 직접적으로 제어할 수 있다.
오프라인 및 저장소
-오프라인 상태에서도 에플리케이션을 동작시킬 수 있다. 이는 HTML5가 플랫폼으로서 사용될 수 있음을 의미한다.
시맨틱 태그
-HTML 요소의 의미를 명확히 설명하는 시맨틱 태그를 도입하여 브라우저, 검색엔진, 개발자 모두에게 콘텐츠의 의미를 명확히 설명할 수 있다. 이를 통해 HTML 요소의 의미를 명확히 해석하고 그 데이터를 활용할 수 있는 시맨틱 웹을 실현할 수 있다.
CSS3
-HTML5는 CSS3를 완벽하게 지원한다.

HTML5 문서는 반드시 <!DOCTYPE html>으로 시작하여 문서 형식을 HTML5로 지정한다.
<head></head>사이에는 문서 제목(document title), 외부파일의 참조, 메타데이터의 설정 등이 위치하며 이 정보들은 브라우저에 표시되지 않는다.
메타데이터 - 데이터에 대한 데이터(데이터를 관한 구조화된 데이터로, 다른 데이터를 설명해 주는 데이터이다. 대량의 정보 가운데에서 찾고 있는 정보를 효율적으로 찾아내서 이용하기 위해 일정한 규칙에 따라 콘텐츠에 대하여 부여되는 데이터이다. 어떤 데이터 즉 구조화된 정보를 분석, 분류하고 부가적 정보를 추가하기 위해 그 데이터 뒤에 함께 따라가는 정보를 말한다.)
<body></body>사이에는 웹브라우저에 출력되는 모든 요소이다.

<!--HTML5 기본문법-->
1)요소 : HTML에서 시작태그와 종료태그로 이루어진 모든 명령어들을 의미
태그: 요소의 일부로 시작태그와 종료태그 두종류가 있는 요소가 있고 빈요소처럼 콘텐츠를 갖을수 없는 요소가 있다.
HTNL은 시작태그와 종료태그가 존재하고 그 사이에는 콘텐츠가 있다
W3C - 월드 와이드 웹 표준을 위하여 표준을 개발하고 장려하는 조직
태그는 대소문자를 구별하지 않지만 W3C에서 HTML4의 경우 소문자를 추천하여 HTML5에서도 소문자를 추천한다.
요소는 중첩이 가능하다 이때 부자관계가 성립이 된다. 이러한 부자로 정보를 구조화 한다.
이러한 부자관계(중첩관계)를 시각화 하기 위해서 들여쓰기를 한다.
빈요소는 콘텐츠를 가질수 없는 요소를 빈요소라고 하며 어트리뷰트(속성)만 가질수 있다. <meta> <br> <hr> <img> <input> <link>

2)속성 : 요소의 시작 태그 안에서 사용되는 것으로 좀 더 구체화된 명령어 체계를 의미한다.
속성은 요소의 성질, 특징을 정의하는 명세이다. 어트리뷰트는 요소에 추가적 정보(이미지의 파일경로, 크기 등)을 제공한다. 어트리뷰트는 시작 태그에 위치해야 하며 이름과 값의 쌍을 이룬다.
글로벌 어트리뷰트는  모든  HTML요소가 공통으로 사용할 수 있는 어트리뷰트이다.
-id : 유일한 식별자를 요소에 지정한다. 중복 지정이 불가능하다.
-class : 스타일시트에 정의된 class를 요소에 지정한다. 중복 지정이 가능하다.
-hidden : css의 hidden과는 다르게 의미상으로도 브라우저에 노출되지 않게 된다.
-lang : 지정된 요소의 언어를 지정한다. 검색엔진의 크롤링(웹 페이지를 그대로 가져와서 거기서 데이터를 추출해 내는 행위) 시 웹페이지의 언어를 인식할 수 있게 한다. <long='ko'>
-style : 요소에 인라인 스타일을 지정한다.
-tabindex : 사용자가 키보드로 페이지를 내비게이션 시 이동 순서를 지정한다.(스크린 리더 사용자가 키보드를 통해 웹 페이지의 정보에 접근하는 순서)
-title : 요소에 관한 제목을 지정한다.

3)주석 : 개발자에게 코드를 설명하기 위해 사용되며 브라우저는 주석을 화면에 표시하지 않는다.
<!--여기는 주석이 들어가는 공간입니다!-->


▶▶▶2장
검색 엔진 : 컴퓨터 시스템에 저장된 정보를 찾아주거나 웹 검색을 도와주도록 설계된 정보 검색 시스템 또는 컴퓨터 프로그램이다
SEO (검색엔진 최적화: Search Engine Optimization)
검색엔진은 로봇이라는 프로그램을 이용해 매일 전세계의 웹사이트 정보를 수집한다.이러한 과정을 크롤링이라는 검색엔진의 크롤러가 이를 수행한다.
그리고 검색 사이트 이용자가 검색할 만한 키워드를 미리 예상하여 검색 키워드를 대응하는 인덱스를 만들어둔다 이러한 과정을 인덱싱이라고 하고 검색엔진의 인덱서가 이를 수행한다
검색 엔진은 HTML코드만으로 수집한 정보의 의미를 인지하여하는데 이를 시맨틱 요소를 통해서 해석한다.

h1태그와 스타일 태그를 혼합한 size6은 보기에는 같아보일수 있지만 스타일태그는 의미상으로는 아무런 의미가 없고 개발자의 의도한 요소가 명확하게 나타나지 않는다
하지만 h1태그는 제목중 가장 상위 레벨이라는 의미로 개발자가 의도한 요소의 의미가 명화히 드러난다

시맨틱 태그는 브라우저, 검색엔진, 개발자 모두에게 콘텐츠의 의미를 명확히 설명하는 역활을 한다.
시맨틱 웹이란 웹에 존재하는 수많은 웹페이지들에 메타데이터를 부여하여 기존의 잡다한 데이터 집합이었던 웹페이지를 의미와 관련성을 가지는 거대한 데이터베이스로 구축하고자 하는 발상이다.

시맨틱 태그는
-header : 헤더를 의미한다.
-nav : 내비게이션을 의미한다.
-aside : 사이드에 위치하는 공간을 의미한다.
-section : 본문의 여러 내용을 포함하는 공간을 의미한다.
-article : 본문의 주내용이 들어가는 공간을 의미한다.
-footer : 푸터를 의미한다


▶▶▶3장
웹페이지를 구성하는 기본 태그
-문자 형식 정의 태그 : HTML5는 최상단에 <!DOCTYPE html>을 적어준다
-html 태그 : 모든 HTML 요소의 부모요소이며 웹페이지에 단 하나만 존재한다. html은 글로벌 어트리뷰트을 지원한다 특히 long 어트리뷰트를 사용하는 경우가 많다 한국어를 주 언어로 사용할때는 <html lang='ko'>

-head 태그 : 메타데이터를 포함하기 위한 요소이며 웹페이지에 단 하나만 존재한다. 메타데이터와 같이 화면에 표시되지 않는것만 존재한다.
{head 내부에 있는 태그들}
-title 태그 : 문서의 제목을 정의한다 정의된 제목은 브라우저의 탭에 표시된다.
-style 태그 : HTML 문서를 위한 style 정보를 정의한다
-link 태그 : 외부 리소스와의 연계 정보를 정의한다. 주로 HTML과 외부 CSS파일을 연계에 사용된다.
<link rel="stylesheet" href="style.css">
-script 태그 : client-side JavaScript를 정의한다. src 속성을 사용하여 외부 JS파일을 로드할수있다.
<script src="main.js"></script>
-meta 태그 : description, keywords, author(설명, 키워드, 작가), 기타 메타테이터 정의에 사용된다. 메타데이터는 브라우저, 검색엔진등에 의해 사용된다.
charset 속성은 브라우저가 사용할 문자셋을 정의한다 <meta charset="utf-8">
keywords 속성은 SEO를 위해 검색엔진이 사용할 keywords를 정의한다 <meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript">
description 속성은 말그대로 설명해주는 속성
author 속성은 저자를 명기한다

-body 태그 : 메타데이터를 제외한 웹페이지를 구성하는 대부분의 요소가 body요소 내에 기술된다.


▶▶▶4장
텍스트 관련 태그
-제목 태그 : 제목을 나타낼때 사용하는 h1~h6까지의 태그가 있다 h1이 가장 중요한 제목을 의미하며 
글자의 크기도 가장 크다 시맨틱 웹의 의미를 살려서 제목 이외에는 사용하지 않는 것이 좋다. 
검색엔진은 제목태그를 중요하게 받아들일 가능성이 크다

[글자 형태 태그]
-b 태그 : 의미론적 중요성의 의미는 없다 (bold)볼드체를 지정한다(좀더 두껍게 해준다)
-strong 태그: 볼드체를 지정하지만 b 태그와 다르게 의미론적으로 중요성의 의미를 갖는다.
-i 태그 : italic체를 지정한다
-em 태그 : emphasized(강조, 중요한) 텍스트를 지정한다 i태그와 같이 italic체를 지정하지만 의미적으로 중요성의 의미를 갖는다
-small 태그 : small 택스트를 지정한다.(다른 글자보다 작다)
-mark 태그 : highlighted 택스트를 지정한다.(글자위에 형광팬으로 체크한 느낌)
-del 태그 : deleted 택스트를 지정한다 (글자위에 ----가 덮어진 느낌)
-ins 태그 : inserted(added) 택스트를 지정한다 (글자 밑에 ____가 추가된 느낌)
-sub/sup 태그 : sub는 아래첨자 sup는 위첨자 느낌

[본문 태그]
-p 태그 : 단락(Paragraphs)(문단)을 지정한다.
-br 태그 : 강제 개행(줄바꿈)을 지정한다. 빈 요소로 종료태그가 없다.
html에서 연속적으로 space또는 enter을 하여도 하나의 공백으로 표시되므로 enter을 하고싶다면 br을 사용한다.
이때 연속적인 공백을 사용하기 위해서는 &nbsp;(Non-breaking Space)특수문자를 사용한다
-pre 태그 : 형식화된(preformatted) 택스트를 지정하는데 pre태그 내에서는 작성한 그대로 브라우저에 표시된다.
-hr 태그 : 수평줄을 삽입한다.
-q 태그 : 짧은 인용문(quotation)을 지정하는데 브라우저는 q태그를 "(큰따옴표)로 감싼다.
-blockquota 태그 : 긴 인용문을 지정한다 브라우저는 blockquota을 들여쓰기하며 css를 이용하여 다양한 스타일을 적용가능하다.


▶▶▶5장
HTML의 link의 개념과 연결되는 Hyper는 사용자가 원하는 순서대로 원하는 정보를 취득할 수 있는 기능을 제공한다.
한 텍스트에서 다른 텍스트로 건너뛰어 읽을 수 있는 기능을 하이퍼링크(Hyper link)라고 한다.
a(anchor) tag가 하이퍼링크 역활을 하고있다.

herf 속성: href 속성은 이동하고자 하는 파일의 위치(경로)를 값으로 받는다 경로는 파일 시스템 상에서 특정 파일의 위치를 의미한다.
[디렉터리] : 폴더라고 부른다.(파일과 다른 디렉터리를 갖는 파일 시스템 내의 존재물이다.)
-루트 디렉러리 : 파일 시스템 계층 구조 상의 최상위 디렉터리이다 (Windows: C:\)
-홈 디렉터리: 시스템의 사용자에게 각각 할당된 개별 디렉터리이다. (Windows: C:\Users\{계정명})
-작업 디렉터리: 작업중인 파일의 위치한 디렉터리이다. (./)
-부모 디렉터리: 작업 디렉터리의 부모 디렉터리이다. (../)
[파일경로] : 파일 시스템에서 파일의 위치를 나타내는 방법
-절대 경로 : 현재 작업 디렉터리와 관계없이 특정 파일의 절대적인 위치를 가리킨다. 루트 디렉터리를 기준으로 파일의 위치를 나타낸다.
(C:\users\leeungmo\Desktop\myImage.jpg)
-상대 경로 : 현재 작업 디렉터리를 기준으로 특정 파일의 상대적인 위치를 가리킨다.
(../../dist/index.js)
[href 속성으로 사용하는 값]
-절대경로 : <a href="http://www.google.com">URL</a><br>
-상대경로 : <a href="html/my.html">Local file</a><br>
-fragment identifier : <h2 id="top">Top of page!</h2>  --> <a href="#top">Go to top</a> 페이지 내의 특정 id를 갖는 요소로 이동한다
-메일 : <a href="ckehfqkr302@naver.com">Send Mail</a><br>
-script : <a href="javascript:alert('Hello');">Javascript</a>

targer 속성 : 링크를 클릭했을 때 윈도우를 어떻게 오픈할지 정한다.
- _self : 링크를 클릭했을때 현재 윈도우에 오픈된다. (target="_self")
- _blank : 링크를 클릭했을때 새오운 윈도우에서 오픈된다. (target="_blank")
이떄 blank 를 사용하면 외부 페이지에서 자바스크립트 코드를 사용해 악의적으로 페이지를 공격하는 피싱을 공격당할수 있으서 
rel="noopener noreferrer"을 추가해주어 피싱공격을 대비할수 있다


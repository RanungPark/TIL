Set 객체는 중복되지 않는 유일한 값들의 집합이다 
Set 객체는 배열과 유사하지만 Set은 동일한 값을 중복하여 포함할 수 없다 또한 요소 순서에 의미가 없으며 인덱스로 요소를 접근할 수 없다

Set 객체의 특성은 수학적 집합의 특성과 일치한다 따라서 교침합 합집합 차집합 여집합등을 구현할 수 있다

Set 생성자 함수는 이터러블을 인수로 전달받아 Set 객체를 생성한다 이때 이터러블의 중복된 값은 Set 객체에 요소로 저장되지 않는다

size 프로퍼티로 요소의 개수를 확인한다

add 메서드로 요소를 추가한다

has 메서드로 특정 요소의 존재 여부를 나타내는 불리언 값을 반환한다

delete 메서드로 특정 요소를 삭제할 수 있고 삭제 성공 여부를 나타내는 불리언 값을 반환한다

clear로 모든 요소를 일괄 삭제한다 이때 언제나 undefined를 반환한다

---

Map 객체는 키와 값이 쌍으로 이루어진 컬렉션이다

Map 객체는 객체와 유사하지만 키로 사용할 수 있는 값으로 객체를 포함한 모든 값으로 사용할 수 있고 이터러블이며 요소 개수를 확인할때 size를 통하여 확인한다

Map 생성자 함수는 이터러블을 인수로 전달받아 Map 객체를 생성한다 이때 인수로 전달되는 이터러블은 키와 값의 쌍으로 이루어진 요소로 구성되어야 한다

Map 객체에는 중복된 키를 갖는 요소가 존재할 수 없다

size 프로퍼티로 요소의 개수를 확인한다

set 메서드를 통하여 요소를 추가한다

get 메서드로 특정 요소를 취득할 수 있다

has 메서드로 특정 요소의 존재 여부를 나타내는 불리언 값을 반환한다

delete 메서드로 특정 요소를 삭제할 수 있고 삭제 성공 여부를 나타내는 불리언 값을 반환한다

clear로 모든 요소를 일괄 삭제한다 이때 언제나 undefined를 반환한다

Map객체는 이터러블이면서 동시에 이터레이터인 객체를 반환하는 메서드를 제공한다

keys 요소키

values 요소값

entries 요소키와 요소값

소감 : Set과 Map은 이터러블로 for … of와 스프레드 문법, 디스트럭처링 할당을 할 수 있다 Set은 배열과 유사하지만 중복된 요소를 가질 수 없으며 이는 수학적 집합을 구현하는데 좋다 Map은 키값으로 모든 타입을 값으로 받을수 있다 또한 중복된 키를 갖는 요소가 존재 할 수 없다 이둘은 이터러블을 인수로 전달받는다